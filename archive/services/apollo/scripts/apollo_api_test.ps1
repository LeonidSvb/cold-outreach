# Apollo API Test –¥–ª—è —Å–±–æ—Ä–∞ –ª–∏–¥–æ–≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –∞–≥–µ–Ω—Ç—Å—Ç–≤
# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API

$apiKey = "vSJb2-hxp_tbdxy7K8tvgw"
$baseUrl = "https://api.apollo.io/v1"

# Headers –¥–ª—è Apollo API
$headers = @{
    "Content-Type" = "application/json"
    "Cache-Control" = "no-cache"
    "X-Api-Key" = $apiKey
}

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –∞–≥–µ–Ω—Ç—Å—Ç–≤
$searchParams = @{
    "page" = 1
    "per_page" = 10
    "organization_locations" = @("United States")
    "organization_num_employees_ranges" = @("11,50")
    "organization_industry_tag_ids" = @(
        "5567cdfc74636479ba000015",  # Marketing Services
        "5567cdfc74636479ba000016"   # Advertising
    )
    "organization_keywords" = @(
        "lead generation",
        "digital marketing", 
        "PPC agency",
        "marketing automation"
    )
    "organization_technologies" = @(
        "HubSpot",
        "Salesforce",
        "Google Ads"
    )
    "organization_founded_year_min" = 2015
    "organization_founded_year_max" = 2022
    "prospected_by_current_team" = @("no")
} | ConvertTo-Json -Depth 3

Write-Host "üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º Apollo API –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –∞–≥–µ–Ω—Ç—Å—Ç–≤..." -ForegroundColor Green

try {
    $response = Invoke-RestMethod -Uri "$baseUrl/mixed_people/search" -Method POST -Headers $headers -Body $searchParams
    
    Write-Host "‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç Apollo API!" -ForegroundColor Green
    Write-Host "–ù–∞–π–¥–µ–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π: $($response.organizations.Count)" -ForegroundColor Yellow
    
    # –°–æ–∑–¥–∞–µ–º CSV —Ñ–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    $csvData = @()
    $timestamp = Get-Date -Format "yyyyMMdd_HHmmss"
    
    foreach ($org in $response.organizations) {
        # –ü—Ä–æ—Å—Ç–æ–π —Å–∫–æ—Ä–∏–Ω–≥
        $score = 50  # –ë–∞–∑–æ–≤—ã–π –±–∞–ª–ª
        
        # –ë–æ–Ω—É—Å –∑–∞ —Ä–∞–∑–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã
        if ($org.estimated_num_employees -ge 25) { $score += 15 }
        elseif ($org.estimated_num_employees -ge 10) { $score += 10 }
        
        # –ë–æ–Ω—É—Å –∑–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        if ($org.technologies) { $score += 10 }
        
        # –ë–æ–Ω—É—Å –∑–∞ LinkedIn –∏ website
        if ($org.linkedin_url -and $org.website_url) { $score += 15 }
        
        # –ë–æ–Ω—É—Å –∑–∞ –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏
        if ($org.num_current_positions -gt 0) { $score += 10 }
        
        $csvRow = [PSCustomObject]@{
            "Company_Name" = $org.name
            "Domain" = ($org.website_url -replace "https?://", "")
            "Website_URL" = $org.website_url
            "LinkedIn_URL" = $org.linkedin_url
            "Industry" = $org.industry
            "Employee_Count" = $org.estimated_num_employees
            "Location_City" = $org.primary_location.city
            "Location_State" = $org.primary_location.state
            "Location_Country" = $org.primary_location.country
            "Founded_Year" = $org.founded_year
            "Technologies" = ($org.technologies.name -join ", ")
            "Job_Openings" = $org.num_current_positions
            "Lead_Score" = $score
            "Collection_Date" = (Get-Date -Format "yyyy-MM-dd")
            "Enrichment_Priority" = if ($score -ge 70) { "High" } else { "Medium" }
            "Target_Persona" = "Agency Owner/CMO"
        }
        
        $csvData += $csvRow
    }
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ª–∏–¥—ã (70+ –±–∞–ª–ª–æ–≤)
    $qualityLeads = $csvData | Where-Object { $_.Lead_Score -ge 70 }
    
    # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ CSV
    $csvFileName = "marketing_agencies_leads_$timestamp.csv"
    $csvPath = "C:\Users\79818\Desktop\Outreach - new\$csvFileName"
    $csvData | Export-Csv -Path $csvPath -NoTypeInformation -Encoding UTF8
    
    Write-Host "üíæ –î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤: $csvFileName" -ForegroundColor Cyan
    Write-Host "üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–ø–∞–Ω–∏–π: $($csvData.Count)" -ForegroundColor Yellow
    Write-Host "‚≠ê –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ª–∏–¥–æ–≤ (70+ –±–∞–ª–ª–æ–≤): $($qualityLeads.Count)" -ForegroundColor Green
    
    # –í—ã–≤–æ–¥–∏–º —Ç–æ–ø –ª–∏–¥—ã
    Write-Host "`nüèÜ –¢–û–ü –ö–ê–ß–ï–°–¢–í–ï–ù–ù–´–ï –õ–ò–î–´:" -ForegroundColor Magenta
    $qualityLeads | Sort-Object Lead_Score -Descending | Select-Object -First 5 | ForEach-Object {
        Write-Host "‚Ä¢ $($_.Company_Name) - Score: $($_.Lead_Score) - $($_.Location_City), $($_.Location_State)" -ForegroundColor White
    }
    
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Apollo API: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!" -ForegroundColor Green